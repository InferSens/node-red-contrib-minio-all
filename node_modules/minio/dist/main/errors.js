"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.S3Error = exports.InvalidXMLError = exports.IncorrectSizeError = exports.InvalidBucketPolicyError = exports.InvalidPrefixError = exports.InvalidDateError = exports.ExpiresParamError = exports.SecretKeyRequiredError = exports.AccessKeyRequiredError = exports.InvalidObjectNameError = exports.InvalidBucketNameError = exports.InvalidEndpointError = exports.InvalidPortError = exports.InvalidArgumentError = exports.AnonymousRequestError = void 0;

var _es6Error = _interopRequireDefault(require("es6-error"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

// AnonymousRequestError is generated for anonymous keys on specific
// APIs. NOTE: PresignedURL generation always requires access keys.
var AnonymousRequestError = /*#__PURE__*/function (_ExtendableError) {
  _inherits(AnonymousRequestError, _ExtendableError);

  function AnonymousRequestError(message) {
    _classCallCheck(this, AnonymousRequestError);

    return _possibleConstructorReturn(this, _getPrototypeOf(AnonymousRequestError).call(this, message));
  }

  return AnonymousRequestError;
}(_es6Error.default); // InvalidArgumentError is generated for all invalid arguments.


exports.AnonymousRequestError = AnonymousRequestError;

var InvalidArgumentError = /*#__PURE__*/function (_ExtendableError2) {
  _inherits(InvalidArgumentError, _ExtendableError2);

  function InvalidArgumentError(message) {
    _classCallCheck(this, InvalidArgumentError);

    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidArgumentError).call(this, message));
  }

  return InvalidArgumentError;
}(_es6Error.default); // InvalidPortError is generated when a non integer value is provided
// for ports.


exports.InvalidArgumentError = InvalidArgumentError;

var InvalidPortError = /*#__PURE__*/function (_ExtendableError3) {
  _inherits(InvalidPortError, _ExtendableError3);

  function InvalidPortError(message) {
    _classCallCheck(this, InvalidPortError);

    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidPortError).call(this, message));
  }

  return InvalidPortError;
}(_es6Error.default); // InvalidEndpointError is generated when an invalid end point value is
// provided which does not follow domain standards.


exports.InvalidPortError = InvalidPortError;

var InvalidEndpointError = /*#__PURE__*/function (_ExtendableError4) {
  _inherits(InvalidEndpointError, _ExtendableError4);

  function InvalidEndpointError(message) {
    _classCallCheck(this, InvalidEndpointError);

    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidEndpointError).call(this, message));
  }

  return InvalidEndpointError;
}(_es6Error.default); // InvalidBucketNameError is generated when an invalid bucket name is
// provided which does not follow AWS S3 specifications.
// http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html


exports.InvalidEndpointError = InvalidEndpointError;

var InvalidBucketNameError = /*#__PURE__*/function (_ExtendableError5) {
  _inherits(InvalidBucketNameError, _ExtendableError5);

  function InvalidBucketNameError(message) {
    _classCallCheck(this, InvalidBucketNameError);

    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidBucketNameError).call(this, message));
  }

  return InvalidBucketNameError;
}(_es6Error.default); // InvalidObjectNameError is generated when an invalid object name is
// provided which does not follow AWS S3 specifications.
// http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html


exports.InvalidBucketNameError = InvalidBucketNameError;

var InvalidObjectNameError = /*#__PURE__*/function (_ExtendableError6) {
  _inherits(InvalidObjectNameError, _ExtendableError6);

  function InvalidObjectNameError(message) {
    _classCallCheck(this, InvalidObjectNameError);

    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidObjectNameError).call(this, message));
  }

  return InvalidObjectNameError;
}(_es6Error.default); // AccessKeyRequiredError generated by signature methods when access
// key is not found.


exports.InvalidObjectNameError = InvalidObjectNameError;

var AccessKeyRequiredError = /*#__PURE__*/function (_ExtendableError7) {
  _inherits(AccessKeyRequiredError, _ExtendableError7);

  function AccessKeyRequiredError(message) {
    _classCallCheck(this, AccessKeyRequiredError);

    return _possibleConstructorReturn(this, _getPrototypeOf(AccessKeyRequiredError).call(this, message));
  }

  return AccessKeyRequiredError;
}(_es6Error.default); // SecretKeyRequiredError generated by signature methods when secret
// key is not found.


exports.AccessKeyRequiredError = AccessKeyRequiredError;

var SecretKeyRequiredError = /*#__PURE__*/function (_ExtendableError8) {
  _inherits(SecretKeyRequiredError, _ExtendableError8);

  function SecretKeyRequiredError(message) {
    _classCallCheck(this, SecretKeyRequiredError);

    return _possibleConstructorReturn(this, _getPrototypeOf(SecretKeyRequiredError).call(this, message));
  }

  return SecretKeyRequiredError;
}(_es6Error.default); // ExpiresParamError generated when expires parameter value is not
// well within stipulated limits.


exports.SecretKeyRequiredError = SecretKeyRequiredError;

var ExpiresParamError = /*#__PURE__*/function (_ExtendableError9) {
  _inherits(ExpiresParamError, _ExtendableError9);

  function ExpiresParamError(message) {
    _classCallCheck(this, ExpiresParamError);

    return _possibleConstructorReturn(this, _getPrototypeOf(ExpiresParamError).call(this, message));
  }

  return ExpiresParamError;
}(_es6Error.default); // InvalidDateError generated when invalid date is found.


exports.ExpiresParamError = ExpiresParamError;

var InvalidDateError = /*#__PURE__*/function (_ExtendableError10) {
  _inherits(InvalidDateError, _ExtendableError10);

  function InvalidDateError(message) {
    _classCallCheck(this, InvalidDateError);

    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidDateError).call(this, message));
  }

  return InvalidDateError;
}(_es6Error.default); // InvalidPrefixError generated when object prefix provided is invalid
// or does not conform to AWS S3 object key restrictions.


exports.InvalidDateError = InvalidDateError;

var InvalidPrefixError = /*#__PURE__*/function (_ExtendableError11) {
  _inherits(InvalidPrefixError, _ExtendableError11);

  function InvalidPrefixError(message) {
    _classCallCheck(this, InvalidPrefixError);

    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidPrefixError).call(this, message));
  }

  return InvalidPrefixError;
}(_es6Error.default); // InvalidBucketPolicyError generated when the given bucket policy is invalid.


exports.InvalidPrefixError = InvalidPrefixError;

var InvalidBucketPolicyError = /*#__PURE__*/function (_ExtendableError12) {
  _inherits(InvalidBucketPolicyError, _ExtendableError12);

  function InvalidBucketPolicyError(message) {
    _classCallCheck(this, InvalidBucketPolicyError);

    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidBucketPolicyError).call(this, message));
  }

  return InvalidBucketPolicyError;
}(_es6Error.default); // IncorrectSizeError generated when total data read mismatches with
// the input size.


exports.InvalidBucketPolicyError = InvalidBucketPolicyError;

var IncorrectSizeError = /*#__PURE__*/function (_ExtendableError13) {
  _inherits(IncorrectSizeError, _ExtendableError13);

  function IncorrectSizeError(message) {
    _classCallCheck(this, IncorrectSizeError);

    return _possibleConstructorReturn(this, _getPrototypeOf(IncorrectSizeError).call(this, message));
  }

  return IncorrectSizeError;
}(_es6Error.default); // InvalidXMLError generated when an unknown XML is found.


exports.IncorrectSizeError = IncorrectSizeError;

var InvalidXMLError = /*#__PURE__*/function (_ExtendableError14) {
  _inherits(InvalidXMLError, _ExtendableError14);

  function InvalidXMLError(message) {
    _classCallCheck(this, InvalidXMLError);

    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidXMLError).call(this, message));
  }

  return InvalidXMLError;
}(_es6Error.default); // S3Error is generated for errors returned from S3 server.
// see getErrorTransformer for details


exports.InvalidXMLError = InvalidXMLError;

var S3Error = /*#__PURE__*/function (_ExtendableError15) {
  _inherits(S3Error, _ExtendableError15);

  function S3Error(message) {
    _classCallCheck(this, S3Error);

    return _possibleConstructorReturn(this, _getPrototypeOf(S3Error).call(this, message));
  }

  return S3Error;
}(_es6Error.default);

exports.S3Error = S3Error;
//# sourceMappingURL=errors.js.map
